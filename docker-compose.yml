services:
  postgres:
    image: postgres:15
    container_name: rag_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  qdrant:
    image: qdrant/qdrant:v1.14.1
    container_name: rag_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      # Safer than /readyz and works once HTTP is up
      test: ["CMD-SHELL", "wget -qO- http://localhost:6333/collections >/dev/null 2>&1 || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 50
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      QDRANT_URL: http://qdrant:6333
      QDRANT_COLLECTION: ${QDRANT_COLLECTION:-jesa_docs}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      EMBED_DEVICE: ${EMBED_DEVICE:-cpu}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-120}
      GROQ_API_KEY: ${GROQ_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag_frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"

volumes:
  pg_data:
  qdrant_data:
